name: Build/release

on: push:
      tags:
        - 'v*.*.*'
permissions:
  contents: write
  packages: write
  issues: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v5
        with:
          node-version: 22.19.0
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Linux deps
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y fakeroot rpm dpkg dpkg-dev libarchive-tools
      
      - name: Fix app-builder permissions
        if: runner.os == 'Linux'
        run: chmod +x node_modules/app-builder-bin/linux/x64/app-builder || true
      
      - name: Import Code Signing Certificate (macOS)
        if: runner.os == 'macOS'
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}
      
      - name: Import Notarization Credentials (macOS)
        if: runner.os == 'macOS'
        uses: Apple-Actions/download-provisioning-profiles@v1
        with:
          bundle-id: com.hyperteleporter.app
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          
          # macOS code signing
          mac_certificate_name: ${{ secrets.CERTIFICATE_NAME }}
          mac_certificate_password: ${{ secrets.CERTIFICATE_PASSWORD }}
          mac_provisioning_profile: ${{ secrets.PROVISIONING_PROFILE }}